{
  "extends": [
    "tslint:recommended",
    "tslint-consistent-codestyle"
  ],
  "linterOptions": {
    "exclude": [
      "bin",
      "lib/*generated.js",
      "**/**/*.html"
    ]
  },
  "rulesDirectory": [
    "node_modules/codelyzer"
  ],

  "rules": {
    // https://github.com/palantir/tslint/blob/master/src/configs/recommended.ts
    "quotemark": {
      "options": [
        "single",
        "avoid-escape"
      ]
    },

    "arrow-return-shorthand": true,
    "callable-types": true,
    "class-name": true,
    "comment-format": [
      true,
      "check-space"
    ],
    "curly": true,
    "deprecation": {
      "severity": "warn"
    },
    "eofline": true,
    "forin": true,
    "import-blacklist": [
      true,
      "rxjs/Rx"
    ],
    "import-spacing": true,
    "indent": [
      true,
      "spaces"
    ],
    "interface-name": false,
    "interface-over-type-literal": true,
    "jsdoc-format": true,
    "label-position": true,
    "max-line-length": [
      true,
      120
    ],
    "max-classes-per-file": [
      true,
      1,
      "exclude-class-expressions"
    ],
    "member-access": true,
    "member-ordering": [
      true,
      {
        "order": [
          "public-static-field",
          "public-instance-field",
          "public-constructor",
          "private-static-field",
          "private-instance-field",
          "private-constructor",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method"
        ]
      }
    ],
    "ordered-imports": true, // for more info read https://palantir.github.io/tslint/rules/ordered-imports/

    /* >>> no-* */
    "no-arg": true,
    "no-bitwise": false,
    "no-console": [
      true,
      "debug",
      "info",
      "time",
      "timeEnd",
      "trace"
    ],
    "no-construct": true,
    "no-debugger": true,
    "no-duplicate-variable": [
      true,
      "check-parameters"
    ],
    "no-duplicate-super": true,
    "no-empty": false,
    "no-empty-interface": true,
    "no-eval": true,
    "no-inferrable-types": [
      true,
      "ignore-params"
    ],
    "no-any": true,
    "no-misused-new": true,
    "no-non-null-assertion": true,
    "no-shadowed-variable": true,
    "no-string-literal": false,
    "no-string-throw": true,
    "no-switch-case-fall-through": true,
    "no-trailing-whitespace": true,
    "no-unnecessary-initializer": false,
    "no-unused-expression": true,
    "no-use-before-declare": true,
    "no-var-keyword": true,
    "no-angle-bracket-type-assertion": false,
    "no-consecutive-blank-lines": false,
    "no-unused-variable": [
      true,
      {
        "ignore-pattern": "^_"
      }
    ],

    /* object-* */
    "object-literal-sort-keys": false,
    "object-literal-key-quotes": false,
    "object-literal-shorthand": false,

    "one-line": [
      true,
      "check-open-brace",
      "check-catch",
      "check-else",
      "check-whitespace"
    ],
    "prefer-const": true,
    "prefer-readonly": true,
    "radix": true,
    "semicolon": [
      true,
      "never"
    ],
    "triple-equals": [
      true,
      "allow-null-check"
    ],
    "typedef": [
      true,
      "parameter",
      "property-declaration",
      "call-signature"
    ],
    "typedef-whitespace": [
      true,
      {
        "call-signature": "nospace",
        "index-signature": "nospace",
        "parameter": "nospace",
        "property-declaration": "nospace",
        "variable-declaration": "nospace"
      }
    ],
    "unified-signatures": true,
    "variable-name": [
      true,
      "allow-leading-underscore",
      "allow-pascal-case",
      "ban-keywords",
      "check-format"
    ],
    "whitespace": [
      true,
      "check-branch",
      "check-decl",
      "check-operator",
      "check-separator",
      "check-type"
    ],
    "import-destructuring-spacing": true,
    "trailing-comma": [
      false,
      {
        "multiline": "always",
        "singleline": "never"
      }
    ],
    "interface-name": [
      false,
      "always-prefix"
    ],
    "switch-final-break": [
      true,
      "always"
    ],

    // Disallow `fit` and `fdescribe` in Jasmine tests
    "defocus": true,

    // ESLint Specific
    // https://github.com/buzinas/tslint-eslint-rules#rules-copied-from-eslint-website
    "no-irregular-whitespace": true,
    "ter-arrow-body-style": [
      true,
      "as-needed",
      {
        "requireReturnForObjectLiteral": true
      }
    ],
    "ter-arrow-parens": [
      true,
      "as-needed",
      {
        "requireForBlockBody": true
      }
    ],
    "arrow-parens": false,  // arrow-parens conflicts with ter-arrow-parens, so turn it off
    "ter-arrow-spacing": [
      true
    ],
    "ter-prefer-arrow-callback": [
      true,
      {
        "allowNamedFunctions": true,
        "allowUnboundThis": false
      }
    ],
    "ter-indent": [
      true,
      2,
      {
        "SwitchCase": 1,
        "outerIIFEBody": 0,
        "MemberExpression": 1,
        "FunctionDeclaration": {
          "body": 1,
          "parameters": 1
        },
        "FunctionExpression": {
          "body": 1,
          "parameters": 1
        },
        "CallExpression": {
          "arguments": 1
        }
      }
    ],
    "ter-max-len": [
      true,
      120,
      {
        "ignoreUrls": true,
        "ignoreRegExpLiterals": true
      }
    ],
    "no-multi-spaces": [
      true,
      {
        "exceptions": {
          "PropertyAssignment": false
        }
      }
    ],
    "object-curly-spacing": [
      true,
      "always"
    ],
    "space-in-parens": [
      true,
      "never"
    ],
    // Angular Codelyzer
    "angular-whitespace": [
      true,
      "check-interpolation",
      "check-semicolon"
    ],
    "banana-in-box": true,
    "templates-no-negated-async": true,
    "directive-selector": [
      true,
      "attribute",
      "jira",
      "camelCase"
    ],
    "component-selector": [
      true,
      "element",
      "jira",
      "kebab-case"
    ],
    "pipe-naming": [
      true,
      "camelCase",
      "jira"
    ],
    "use-input-property-decorator": true,
    "use-output-property-decorator": true,
    "use-host-property-decorator": true,
    "no-attribute-parameter-decorator": true,
    "no-output-on-prefix": true,
    "no-input-rename": true,
    "no-output-rename": true,
    "use-life-cycle-interface": true,
    "use-pipe-transform-interface": true,
    "component-class-suffix": [
      true,
      "Component",
      "Page"
    ],
    "directive-class-suffix": [
      true,
      "Directive"
    ],
    "naming-convention": [
      true,
      // require leading underscores for private properties and methods, all other rules still apply
      {
        "type": "member",
        "modifiers": "private",
        "leadingUnderscore": "require"
      }
    ]
  }
}
